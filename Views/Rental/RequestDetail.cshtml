@model Booking

@{
    ViewData["Title"] = "RequestDetail";
}

<style>
    .seller-message {
        font-weight: 600;
        width: 50%;
        padding: 10px 10px;
        background-color: #f2f2f2;
        color: green;
        margin: 5px 0px;
        border-radius: 10px;
        font-size: 11px;
    }

    .customer-message {
        font-weight: 600;
        font-size: 11px;
        width: 50%;
        padding: 10px 10px;
        margin: 5px 0px;
        background-color: rgb(110, 148, 212);
        color: white;
        border-radius: 10px;
        justify-content: end;
        margin-left: auto;
    }

    .markAsSolved {
        border-radius: 15px;
        color: white;
    }
</style>

<link rel="stylesheet" href="~/css/queryDetails.css">

<div class="d-flex me-md-2 gap-2">
    @if (Model.BookingStatus != StaticDetail.BookingStatusApproved && Model.BookingStatus != StaticDetail.BookingStatusConfirmed
    && Model.BookingStatus != StaticDetail.BookingStatusCompleted && User.IsInRole("Seller"))
    {
        <form class="d-flex flex-column gap-2 ms-2 markAsSolved" method="post" asp-action="MarkAsApproved" asp-route-bookingId="@Model.BookingId">
            <button type="submit" class="btn align-self-start  btn-sm btn-secondary"><i class="bi bi-check2"></i> Mark As Approved</button>
        </form>
    }

    @if (User.IsInRole("Seller") && Model.PaymentStatus == StaticDetail.PaymentStatusCompleted && Model.RentStatus != StaticDetail.RentStatusCompleted)
    {
        <form id="paymentForm" method="post" action="@Url.Action("MarkAsCompleted", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">Mark As Completed</button>
        </form>
    }

    @if ((User.IsInRole("Customer") || User.IsInRole("Seller")) && Model.RentStatus == StaticDetail.RentStatusCompleted)
    {
        <form id="paymentForm" method="post" action="@Url.Action("FinalReturnSummary", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">View Return Summary</button>
        </form>
    }


    @if (Model.BookingStatus == StaticDetail.BookingStatusApproved && Model.InitialAmountPaid == null && User.IsInRole("Customer"))
    {
        <form id="paymentForm" method="post" action="@Url.Action("Pay", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">Pay</button>
        </form>
    }
    else if (User.IsInRole("Customer") && Model.BookingStatus != StaticDetail.BookingStatusConfirmed && Model.PaymentStatus != StaticDetail.PaymentStatusCompleted)
    {
        <button type="submit" title="Booking Status should be approved" class="btn ms-2 btn-sm btn-success" disabled>Pay</button>
    }
    @* else if (User.IsInRole("Customer") && Model.RentStatus == StaticDetail.RentStatusReturned && Model.FineAmount != null) *@
    else if (User.IsInRole("Customer") && Model.RentStatus == StaticDetail.RentStatusReturned)
    {
        <form id="paymentForm" method="post" action="@Url.Action("FinalReturnSummaryAfterRentCompletion", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">View Return Summary</button>
        </form>
    }

    @if (Model.BookingStatus == StaticDetail.BookingStatusConfirmed & User.IsInRole("Seller") &&
    (Model.RentStatus == StaticDetail.RentStatusPending))
    {
        <form id="paymentForm" method="post" action="@Url.Action("MarkAsRentStarted", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">Start Rental Period</button>
        </form>
    }
    else if (User.IsInRole("Seller") && Model.RentStatus == StaticDetail.RentStatusInProcess)
    {
        <form id="paymentForm" method="post" action="@Url.Action("InitiateReturnProcess", "Rental")">
            <input type="hidden" name="bookingId" value="@Model.BookingId" />
            <button type="submit" class="btn ms-2 btn-sm btn-success">Return</button>
        </form>
    }
    else if (User.IsInRole("Customer") && Model.RentStatus == StaticDetail.RentStatusInProcess)
    {
        <button type="submit" class="btn ms-2 btn-sm btn-secondary">Rent In Process</button>
    }
</div>

<div class="container-fluid small">
    <div class="row mt-2">
        @*  <!-- left side Booking section --> *@
        <div class="col-md-4 left-side">
            <div class="title purple-background d-flex justify-content-center align-items-center">
                <h5 class="text-center mt-1">Booking</h5>
            </div>
            <hr class="text-white">

            <div class="d-flex query-image gap-4 small_grey_text_css">
                <img src="~/@Model.User.ProfilePictureURL" alt="" height="150" width="200">
                <p class="card-title">@Model.CreatedDate</p>
            </div>

            <div class="card card-box mt-2">
                <div class="card-body d-flex">
                    <div>
                        <div class="gap-2">
                            @* <p class="card-title">@Model.BookingId</p> *@
                            <p class="card-title mb-0">@Model.User.FirstName</p>
                            <p class="card-title mb-0">@Model.Product.ProductName</p>
                            <p class="card-title mb-0">@Model.Product.RentalEquipment.Location</p>
                            <p class="card-title mb-0">Request Start Date: @Model.RequestStartDate</p>
                            <p class="card-title mb-0">Request End Date: @Model.RequestEndDate</p>
                            <p class="card-title mb-0">Actual Start Date: <span class="text-dark">@Model.ActualRequestStartDate</span></p>
                            <p class="card-title mb-0">Actual End Date: <span class="text-dark">@Model.ActualRequestEndDate</span></p>
                            <p class="card-title mb-0">@Model.Product.ProductDescription</p>
                            <br />

                            <div class="bg-light">
                                <p class="card-title mb-0 text-secondary">Booking Status: <span class="text-dark">@Model.BookingStatus</span></p>
                                <p class="card-title mb-0 text-secondary">Payment Status: <span class="text-dark">@Model.PaymentStatus</span></p>
                                <p class="card-title mb-0 text-secondary">Rent Status: <span class="text-dark">@Model.RentStatus</span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- right side BOoking section -->
        <div class="col-md-8 right-side">

            <div class="title purple-background  d-flex justify-content-center align-items-center">
                <h5 class="text-center mt-1">MESSAGES</h5>
            </div>
            <hr class="text-white">

            <div class="messages-container mt-4 mb-4">
                <!-- Messages section -->
                @if (Model.BookingComments != null && Model.BookingComments.Any())
                {
                    @foreach (var comment in ViewBag.pastMessages)
                    {
                        @if (comment.IsSeller)
                        {
                            <section class="seller-message">
                                <p>@comment.CommentText</p>
                            </section>
                        }
                        else
                        {
                            <section class="customer-message">
                                <p>@comment.CommentText</p>
                            </section>
                        }
                    }
                }
            </div>

            @if (Model.RentStatus != StaticDetail.RentStatusCompleted)
            {
                <div class="message-form">
                    <form id="messageForm" class="d-flex gap-4 mt-4">
                        <input type="hidden" id="BookingId" name="BookingId" value="@Model.BookingId">
                        <input type="text" id="commentText" name="commentText" class="form-control" placeholder="Type your message...">
                        <button type="submit" class="btn purple-background white-text">Submit</button>
                    </form>
                </div>

            }
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/ChatHub")
            .build();

        connection.start()
            .then(() => console.log("SignalR Connected"))
            .catch(err => console.error("SignalR Connection Error: ", err.toString()));

        connection.on("ReceiveMessage", function (user, message, isSeller) {

            const cssClass = isSeller ? "seller-message" : "customer-message";

            const messageHTML = `<section class="${cssClass}"><p>${message}</p></section>`;

            if (isSeller) {
                $(".messages-container").append(messageHTML);
            } else {
                $(".messages-container").append(messageHTML);
            }

            $(".messages-container").scrollTop($(".messages-container")[0].scrollHeight);
        });

        $("#messageForm").submit(function (event) {
            event.preventDefault();
            const user = "@User.Identity.Name";
            const userRole = "@(User.IsInRole("Customer") ? "Customer" : "Seller")";

            const message = $("#commentText").val();
            const bookingId = $("#BookingId").val();

            console.log("User's identity name:", user);
            console.log("User's message:", message);
            console.log("BookingId:", bookingId);
            console.log("userRole:", userRole);

            connection.invoke("SendMessageForBooking", user, message, bookingId, userRole)
                .catch(err => console.error(err.toString()));

            $("#commentText").val("");
        });
    </script>
}
