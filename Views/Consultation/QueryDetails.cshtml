@model QueryForm

@{
    ViewData["Title"] = "QueryDetails";
}

<style>
    .expert-message {
        font-weight: 600;
        width: 50%;
        padding: 10px 10px;
        background-color: #f2f2f2;
        color: green;
        margin: 5px 0px;
        border-radius: 10px;
    }

    .seller-message {
        font-weight: 600;
        width: 50%;
        padding: 10px 10px;
        margin: 5px 0px;
        background-color: rgb(110, 148, 212);
        color: white;
        border-radius: 10px;
        justify-content: end;
        margin-left: auto;
    }

    .markAsSolved {
        background-color: aliceblue;
        width: 350px;
        border-radius: 15px;
        color: white;
    }

</style>

<link rel="stylesheet" href="~/css/queryDetails.css">


<div class="container mb-4">
    <form class="container d-flex gap-4 ms-0 markAsSolved" method="post" asp-action="MarkAsSolved" asp-route-queryFormId="@Model.Id">
        @if (Model.QueryStatus != StaticDetail.QueryStatusSolved && User.IsInRole("Expert"))
        {
            <button type="submit" class="btn  btn-sm btn-secondary"><i class="bi bi-check2"></i> Mark As Solved</button>
        }
        <p class="card-title ms-2 mt-2 text-secondary">Query Status: @Model.QueryStatus</p>
    </form>
    <div class="row mt-2">
        @*  <!-- left side query section --> *@
        <div class="col-md-4 left-side">
            <div class="title purple-background d-flex justify-content-center align-items-center">
                <h5 class="text-center mt-1">QUERY</h5>
            </div>
            <hr class="text-white">

            <div class="d-flex query-image gap-4 small_grey_text_css">
                <img src="~/@Model.ImageUrl" alt="" height="150" width="200">
                <p class="card-title">@Model.DateCreated</p>
            </div>


            <div class="card card-box mt-2">
                <div class="card-body d-flex">
                    <div>
                        <div class="gap-2">
                            <p class="card-title">@Model.Id</p>
                            <p class="card-title">@Model.User.FirstName</p>
                            <p class="card-title">@Model.Title</p>
                            <p class="card-title">@Model.ProblemCategory</p>
                            <p class="card-title">@Model.Location</p>
                            <p class="card-title">Urgency Level: @Model.UrgencyLevel</p>
                            <p class="card-title">selected By: @Model.SelectedExpertId</p>
                        </div>
                        <p class="card-title">@Model.Description</p>
                    </div>
                </div>
            </div>

        </div>

        <!-- right side query section -->
        <div class="col-md-8 right-side">

            <div class="title purple-background  d-flex justify-content-center align-items-center">
                <h5 class="text-center mt-1">MESSAGES</h5>
            </div>
            <hr class="text-white">

            <div class="messages-container mt-4 mb-4">
                <!-- Expert's comment -->
                @if (Model.QueryComments != null && Model.QueryComments.Any())
                {
                    @foreach (var comment in ViewBag.pastMessages)
                    {
                        @if (comment.IsExpert)
                        {
                            <section class="expert-message">
                                <p>@comment.CommentText</p>
                            </section>
                        }
                        else
                        {
                            <section class="seller-message">
                                <p>@comment.CommentText</p>
                            </section>
                        }
                    }
                }
            </div>

            @if (Model.QueryStatus != StaticDetail.QueryStatusSolved)
            {
                @if (Model.IsSelected == "true")
                {
                    <div class="message-form">
                        <form id="messageForm" class="d-flex gap-4 mt-4">
                            <input type="hidden" id="queryFormId" name="queryFormId" value="@Model.Id">
                            <input type="text" id="commentText" name="commentText" class="form-control" placeholder="Type your message...">
                            <button type="submit" class="btn purple-background white-text">Submit</button>
                        </form>
                    </div>
                }
                else
                {
                    @if (User.IsInRole("Seller"))
                    {
                        <p class="text-center text-success">Your query is under review. <br /> You will hear from our expert shortly!!</p>
                    }
                    else
                    {
                        <p class="text-center text-danger">Query has not been selected!.</p>

                    }
                }

            }
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/ChatHub")
            .build();

        connection.start()
            .then(() => console.log("SignalR Connected"))
            .catch(err => console.error("SignalR Connection Error: ", err.toString()));

        connection.on("ReceiveMessage", function (user, message, isExpert) {

            const cssClass = isExpert ? "expert-message" : "seller-message";

            const messageHTML = `<section class="${cssClass}"><p>${message}</p></section>`;

            if (isExpert) {
                $(".messages-container").append(messageHTML);
            } else {
                $(".messages-container").append(messageHTML);
            }

            $(".messages-container").scrollTop($(".messages-container")[0].scrollHeight);
        });

        $("#messageForm").submit(function (event) {
            event.preventDefault();
            const user = "@User.Identity.Name";

            const message = $("#commentText").val();
            const queryFormId = $("#queryFormId").val();

            console.log("User's identity name:", user);
            console.log("User's message:", message);
            console.log("queryFormId:", queryFormId);

            connection.invoke("SendMessage", user, message, parseInt(queryFormId))
                .catch(err => console.error(err.toString()));

            $("#commentText").val("");
        });

    </script>

}
